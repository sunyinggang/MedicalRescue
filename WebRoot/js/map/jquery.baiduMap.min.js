!
function(n) {
    var t = function(n) {
        this.init(n)
    };
    var driving,edriving;
    t.prototype = {
        init: function(t) {
            var a = {
                id: "",
                level: 15,
                zoom: !1,
                type: [],
                width: 0,
                height: 0,
                titleClass: "",
                contentClass: "",
                showPanorama: !1,
                showMarkPanorama: !1,
                showLabel: !1,
                mapStyle: "normal",
                icon: {},
                centerPoint: {},
                index: -1,
                animate: !1,
                points: [],
                callback: function() {}
            };
            this.currentData = null,
            this.opts = n.extend({},
            a, t),
            this.render();
        },
        render: function() {
            var n = this.opts,
            t = n.id,
            a = n.centerPoint.lng,
            e = n.centerPoint.lat,
            o = n.level,
            i = new BMap.Point(a, e),
            r = this.map = new BMap.Map(t),
            l = n.mapStyle;
            r.centerAndZoom(i, o),
            r.setMapStyle({
                style: l
            });
            r.enableScrollWheelZoom();
            r.enableContinuousZoom();
            r.addControl(new BMap.NavigationControl());
            driving = new BMap.DrivingRoute(r, {    
                renderOptions: {    
                    map: r,    
                    autoViewport: true    
                },
                onSearchComplete:function(){
               	 Ext.MessageBox.hide();
               	 r.removeOverlay(startmapStartPoint);
   				 r.removeOverlay(startmapEndPoint);
                }
                
        	}); 
            edriving = new BMap.DrivingRoute(r, {    
                renderOptions: {    
                    map: r,    
                    autoViewport: true    
                },
                onSearchComplete:function(){
               	 Ext.MessageBox.hide();
               	 r.removeOverlay(endmapStartPoint);
   				 r.removeOverlay(endmapEndPoint);
                },
                onPolylinesSet:function(rs){
                	rs[0].getPolyline().setStrokeColor('red')
                }
                
        	}); 
            
        	 r.addEventListener("click", function(e){
        		 var pt = e.point;
        		 var fullAddress="";
        		 var geoc = new BMap.Geocoder();    
                 var geolocation = new BMap.Geolocation();
                
        		   
        		if(PointFlag!=''){//开进路径起点选择
        			if(PointFlag=='startmapStartPoint'||PointFlag=='startmapEndPoint'){
        				geoc.getLocation(pt, function(rs){
          				  var elm = Array.prototype.slice.call(document.getElementsByClassName('tangram-suggestion-main'));
       		                elm.forEach(function (v, i) {
       		                    v.style.zIndex = -1;
       		                    v.style.visibility = 'hidden';
       		                });
                            var addComp = rs.addressComponents;
                            fullAddress=addComp.province + addComp.city + addComp.district + addComp.street  + addComp.streetNumber;
                            var point =new BMap.Point(pt.lng, pt.lat);
      	                  var myIcon = new BMap.Icon("js/map/css/start.png", new BMap.Size(30,30));
      	                  if(PointFlag=='startmapEndPoint'){
      	                	  myIcon = new BMap.Icon("js/map/css/end.png", new BMap.Size(30,30));
      	                  }
      	              	  var markerstart = new BMap.Marker(point ,{icon:myIcon}); // 创建点
      	              	  driving.clearResults();
      		              if(PointFlag=='startmapStartPoint'){
      	        				if(startmapStartPoint!=null){
      	            				r.removeOverlay(startmapStartPoint);
      	            			}
      	        				
      	        				startmapStartPoint=markerstart;//存放到全局变量
      	        				r.addOverlay(markerstart);
      	  	              	    if(Ext.getCmp(PointFlag)){
      	  	              		 Ext.getCmp(PointFlag).setValue(fullAddress);
      	  	              	    }
      	        				if(startmapEndPoint!=null){
      	        					Ext.MessageBox.show({
      	        	                    msg: '正在规划路线...',
      	        	                    progressText: '提示',
      	        	                    width: 300,
      	        	                    wait: {
      	        	                        interval: 200
      	        	                    }
      	        	                }); 
      	        					var i=Ext.getCmp('start_driving_way').getValue().driving_way;
      	        					driving.setPolicy(rPolicy[i]);
      	        					driving.search(startmapStartPoint.point,startmapEndPoint.point);
      	        					
      	            			}
      	        				
      	        				
      	        		  }
      		              if(PointFlag=='startmapEndPoint'){
      	        				if(startmapEndPoint!=null){
      	            				r.removeOverlay(startmapEndPoint);
      	            			}
      	        				startmapEndPoint=markerstart;//存放到全局变量
      	        				r.addOverlay(markerstart);
      	  	              	    if(Ext.getCmp(PointFlag)){
      	  	              		 Ext.getCmp(PointFlag).setValue(fullAddress);
      	  	              	    }
      	        				if(startmapStartPoint!=null){
      	        					Ext.MessageBox.show({
      	        	                    msg: '正在规划路线...',
      	        	                    progressText: '提示',
      	        	                    width: 300,
      	        	                    wait: {
      	        	                        interval: 200
      	        	                    }
      	        	                }); 
      	        					var i=Ext.getCmp('start_driving_way').getValue().driving_way;
      	        					driving.search(startmapStartPoint.point,startmapEndPoint.point,{
             	            			 	policy:rPolicy[i]
             	            			   
             	            		 	});
      	        					
      	            			}
      	        				
      	        		  }
      		              
      	              	  
                           
                         });
        				return;
        			}
    			  
        			
        			
        			if(PointFlag=='endmapStartPoint'||PointFlag=='endmapEndPoint'){
        				geoc.getLocation(pt, function(rs){
          				  var elm = Array.prototype.slice.call(document.getElementsByClassName('tangram-suggestion-main'));
       		                elm.forEach(function (v, i) {
       		                    v.style.zIndex = -1;
       		                    v.style.visibility = 'hidden';
       		                });
                            var addComp = rs.addressComponents;
                            fullAddress=addComp.province + addComp.city + addComp.district + addComp.street  + addComp.streetNumber;
                            var point =new BMap.Point(pt.lng, pt.lat);
      	                  var myIcon = new BMap.Icon("js/map/css/start.png", new BMap.Size(30,30));
      	                  if(PointFlag=='endmapEndPoint'){
      	                	  myIcon = new BMap.Icon("js/map/css/end.png", new BMap.Size(30,30));
      	                  }
      	              	  var markerstart = new BMap.Marker(point ,{icon:myIcon}); // 创建点
      	              	  edriving.clearResults();
      		              if(PointFlag=='endmapStartPoint'){
      	        				if(endmapStartPoint!=null){
      	            				r.removeOverlay(endmapStartPoint);
      	            			}
      	        				
      	        				endmapStartPoint=markerstart;//存放到全局变量
      	        				r.addOverlay(markerstart);
      	  	              	    if(Ext.getCmp(PointFlag)){
      	  	              		 Ext.getCmp(PointFlag).setValue(fullAddress);
      	  	              	    }
      	        				if(endmapEndPoint!=null){
      	        					Ext.MessageBox.show({
      	        	                    msg: '正在规划路线...',
      	        	                    progressText: '提示',
      	        	                    width: 300,
      	        	                    wait: {
      	        	                        interval: 200
      	        	                    }
      	        	                }); 
      	        					var i=Ext.getCmp('end_driving_way').getValue().driving_way;
      	        					edriving.setPolicy(rPolicy[i]);
      	        					edriving.search(endmapStartPoint.point,endmapEndPoint.point);
      	        					
      	            			}
      	        				
      	        				
      	        		  }
      		              if(PointFlag=='endmapEndPoint'){
      	        				if(endmapEndPoint!=null){
      	            				r.removeOverlay(endmapEndPoint);
      	            			}
      	        				endmapEndPoint=markerstart;//存放到全局变量
      	        				r.addOverlay(markerstart);
      	  	              	    if(Ext.getCmp(PointFlag)){
      	  	              		 Ext.getCmp(PointFlag).setValue(fullAddress);
      	  	              	    }
      	        				if(endmapStartPoint!=null){
      	        					Ext.MessageBox.show({
      	        	                    msg: '正在规划路线...',
      	        	                    progressText: '提示',
      	        	                    width: 300,
      	        	                    wait: {
      	        	                        interval: 200
      	        	                    }
      	        	                }); 
      	        					var i=Ext.getCmp('end_driving_way').getValue().driving_way;
      	        					edriving.search(endmapStartPoint.point,endmapEndPoint.point,{
             	            			 	policy:rPolicy[i]
             	            			   
             	            		 	});
      	        					
      	            			}
      	        				
      	        		  }
      		              
      	              	  
                           
                         });
        				return;
        			}
        		}
        		if(Ext.getCmp('camp_checkbox')){
        			if(Ext.getCmp('camp_checkbox').getValue()){
        				//营地start
                		if(!e.overlay){
                		  var bool=true;
                          var point =new BMap.Point(pt.lng,pt.lat);
                        	var myIcon = new BMap.Icon("js/map/css/makert.png", new BMap.Size(30,30));
                    		var marker= new BMap.Marker(point ,{icon:myIcon}); // 创建点
                    		r.addOverlay(marker);
                    		CampArr.push(marker);
                    		var searchInfoWindow = null;
                    		var content= '<div class="userSignIw"><div style="z-index:100;height:35px;"><span style="float:left;margin:3px 5px 0 0;">名称</span><input type="text" style="color:#8C8C8C;float:left;width:248px;height:25px;padding:3px 3px;font:12px/1.5 tahoma,arial,宋体;line-height:18px;border:#b5b5b5 solid 1px;" name="title"  id="us_infoWnd_title"><div class="userSignTip hide" id="JuserSignTiptitle"></div></div>'
                    		+'<div class="userTagCont"><span style="float:left;margin:3px 5px 0 0;">备注</span><textarea style="border:#b5b5b5 solid 1px;color:#8C8C8C;float:left;font:12px/1.5 tahoma,arial,宋体;height:64px;overflow-y:auto;padding:3px;width:248px" name="content" id="us_infoWnd_content" value="我的备注"></textarea><div class="userSignTip hide" id="JuserSignTipContent"></div></div>'
                    		+'<div style="overflow:hidden;clear:both;height:0;"></div>'
                    		+'<div style="text-align:right;margin:5px -1px 15px 0;*margin:3px -1px 18px 0;"><input type="button" value="保存" id="btnSignSave" style="cursor:pointer;margin-right:5px;"   class="iw_bt">'
                    		+'<input type="button" value="删除" id="btnSignDelete" style="cursor:pointer" class="iw_bt"></div></div>';
                    		
                    		searchInfoWindow = new BMapLib.SearchInfoWindow(r, content,{
                    				title  : "添加标注",      //标题
                    				width  : 290,             //宽度
                    				enableSendToPhone:false,
                    				enableAutoPan : true,    //自动平移
                    				searchTypes :[
                    				      		]
                    			});
                    		searchInfoWindow.open(marker);
                    		searchInfoWindow.addEventListener('close', function(){
                    			if(bool){
                    				r.removeOverlay(marker);
                    			}
                    		})
                    		$('#btnSignSave').click(function(){
                    			bool=false;
                    			var title = $('#us_infoWnd_title').val()==''?'我的标记':$('#us_infoWnd_title').val();
                    			var content = $('#us_infoWnd_content').val()==''?'我的备注':$('#us_infoWnd_content').val();
                    			searchInfoWindow.close();
                    			var label1 = new BMap.Label(title,{offset:new BMap.Size(20,-10)});
                    			marker.setLabel(label1);
                    			marker.addEventListener("click", function(e){
                        			elng=e.point.lng;
                        			elat=e.point.lat;
                    				var searchInfoWindow1 = new BMapLib.SearchInfoWindow(r,content+'<br/><input type="button" value="删除" id="btnDelete" style="float:right;cursor:pointer" class="iw_bt">',{
                        				title  :title,      //标题
                        				width  : 290,             //宽度
                        				enableSendToPhone:false,
                        				enableAutoPan : true,    //自动平移
                        				searchTypes :[
                        				      		]
                        			});
                    				searchInfoWindow1.open(new BMap.Point(e.point.lng,e.point.lat));
                    				marker.window=searchInfoWindow1;
                    				$('#btnDelete').click(function(){
                    					searchInfoWindow1.close();
                    					for(var i=0;i<CampArr.length;i++){
                            				if(CampArr[i]===marker){
                            					CampArr.splice(i, 1);
                            					r.removeOverlay(marker);
                            					return;
                            				}
                            			}
                            		})
             				    });
                    		})
                    		$('#btnSignDelete').click(function(){
                    			searchInfoWindow.close();
                    			for(var i=0;i<CampArr.length;i++){
                    				if(CampArr[i]===marker){
                    					CampArr.splice(i, 1);
                    					r.removeOverlay(marker);
                    					return;
                    				}
                    			}
                    			
                    		})
                		}
                		//营地end
        			}
        		}
        		
            	
        		
        		
            });
        	
            this.addControl()
        },
        getDriving:function(){
        	
        	return driving
        },
        getEDriving:function(){
        	
        	return edriving
        },
        getLocalSearch:function(s){
        	var u = new BMap.LocalSearch(bmap,{
        		onSearchComplete:function(results){
        			debugger;
        			s(results);
        		}
        	});
        	return u;
        },
        addControl: function() {
            var n = this.opts,
            t = this.map,
            a = n.type,
            e = n.zoom,
            o = n.showPanorama,
            i = a.length > 0 ? 40 : 20;
            if (t.addControl(new BMap.NavigationControl), t.addControl(new BMap.ScaleControl), t.addControl(new BMap.OverviewMapControl), e && t.enableScrollWheelZoom(!0), o) {
                var r = new BMap.PanoramaControl;
                r.setOffset(new BMap.Size(12, i)),
                t.addControl(r)
            }
            if (a.length > 0) {
                var l = this.getMapType(a);
                t.addControl(new BMap.MapTypeControl({
                    mapTypes: l
                }))
            }
            this.renderMarker()
        },
        getMap:function(){
        	return this.map;
        },
        renderMarker: function() {
            var t = this,
            a = this.opts,
            e = this.map,
            o = a.points,
            i = a.icon,
            r = a.animate,
            l = a.showLabel,
            s = a.callback;
            o.length > 0 && n.each(o,
            function(n, o) {
                var p = new BMap.Point(o.lng, o.lat),
                c = new BMap.Marker(p);
                i && i.url && (c = new BMap.Marker(p, {
                    icon: new BMap.Icon(i.url, new BMap.Size(i.width, i.height))
                })),
                e.addOverlay(c),
                r && c.setAnimation(BMAP_ANIMATION_DROP),
                l && t.renderLabel(c,o),
                c.addEventListener("click",
                function() {
                    t.openInfoWindow(c,o),
                    s && "function" == typeof s && s(o.id)
                })
               
            })
        },
        addMarker: function(o,ic) {
            var t = this,
            a = this.opts,
            e = this.map,
            i = ic,
            r = a.animate,
            l = a.showLabel,
            s = a.callback;
            var p = new BMap.Point(o.lng, o.lat),
            c = new BMap.Marker(p);
            i && i.url && (c = new BMap.Marker(p, {
                icon: new BMap.Icon(i.url, new BMap.Size(i.width, i.height))
            }))
            e.addOverlay(c),
            r && c.setAnimation(BMAP_ANIMATION_DROP),
            l && t.renderLabel(c,o),
            c.addEventListener("click",
            function() {
                t.openInfoWindow(c,o),
                s && "function" == typeof s && s(o.id)
            })
            return c;	
        },
        removeMarker: function(o) {
        	var allOverlay = this.map.getOverlays();
			for(var j = 0;j<allOverlay.length;j++) {
				if(allOverlay[j].point){
					if (allOverlay[j].point.lng == o.lng&&allOverlay[j].point.lat == o.lat) {
						this.map.removeOverlay(allOverlay[j]);
		                return false;
		            }
				}
				
			}
            		
        },
        removeOverlay:function(o){
        	this.map.removeOverlay(o);
        },
        renderLabel: function(c,n) {
           /* var t = this.map,
            a = n.title,
            e = new BMap.Point(n.lng, n.lat),
            o = new BMap.Label(a, {
                position: e,
                offset: new BMap.Size(20,-10)
            });
            t.addOverlay(o)*/
        	var label1 = new BMap.Label(n.title,{offset:new BMap.Size(20,-10)});
         	c.setLabel(label1);
        },
        getMapType: function(t) {
            var a = [],
            e = {
                "地图": BMAP_NORMAL_MAP,
                "卫星": BMAP_SATELLITE_MAP,
                "三维": BMAP_PERSPECTIVE_MAP
            };
            return n.each(t,
            function(n, t) {
                t in e && a.push(e[t])
            }),
            a
        },
        getPosition: function(t) {
            var a = this.opts.points,
            e = null;
            return t ? a.length > 0 && n.each(a,
            function(n, a) {
                a.id === t && (e = a)
            }) : e = this.currentData,
            e
        },
        openInfoWindow: function(m,t) {
            var a = this,
            e = this.map,
            o = this.opts,
            //i = this.getPosition(t),
            i=t,
            r = i.content,
            l = new BMap.Point(i.lng, i.lat),
            s = o.showMarkPanorama,
            p = "",
            c = '<div class="' + o.titleClass + '">' + i.title + "</div>";
            if(r.length > 0){
            	p += '<div class="' + o.contentClass + '">' + r + "</div>";
            }
            /*r.length > 0 && n.each(r,
            function(n, t) {
                p += '<div class="' + o.contentClass + '">' + t + "</div>"
            }),*/
            s && (c = '<div class="' + o.titleClass + '">' + i.title + '<img class="open-panorama-btn" src="img/panorama.png" style="margin-left:12px;cursor:pointer;vertical-align:sub;" title="查看全景" /></div>');
            var d = new BMap.InfoWindow(p, {
                width: o.width,
                height: o.height,
                title: c
            });
            m.openInfoWindow(d);
            /*e.openInfoWindow(d, l),
            setTimeout(function() {
                n("#" + o.id).find(".open-panorama-btn").on("click",
                function() {
                    a.openPanorama(i)
                })
            },
            30),*/
            this.currentData = i
        },
        openPanorama: function(n) {
            var t = this.map,
            a = this.opts.id,
            e = new BMap.Point(n.lng, n.lat),
            o = new BMap.Panorama(a); (new BMap.PanoramaService).getPanoramaByLocation(e,
            function(n) {
                n ? (o.setPosition(e), t.setPanorama(o)) : alert("当前位置无全景信息！")
            })
        },
        searchAddress:function(address){
        	  var map = this.map;
        	  var dw=function(smap){
        	        //value=document.getElementById('value').value;
        	        var local = new BMap.LocalSearch(map, {
        	            renderOptions:{map: map}
        	        });
        	        local.setMarkersSetCallback(function(pois){
        	            map.clearOverlays();//清除所有覆盖物后，在叠加第一个点
        	            smap.renderMarker();
        	       })
        	        local.search(address);
        	        map.clearOverlays();
        	        smap.renderMarker();
        	    }
        	  var getBoundary = function (smap){//获取边界       
        		    var bdary = new BMap.Boundary();
        		    bdary.get(address, function(rs){       //获取行政区域
        		        map.clearOverlays();        //清除地图覆盖物       
        		        var count = rs.boundaries.length; //行政区域的点有多少个
        		        for(var i = 0; i < count; i++){
        		            var ply = new BMap.Polygon(rs.boundaries[i], {
        		                strokeWeight: 1
        		            }); //建立多边形覆盖物
        		            map.addOverlay(ply);  //添加覆盖物
        		            map.setViewport(ply.getPath());    //调整视野   
        		            }    
        		        smap.renderMarker();
        		        }); 
        		   
        	 } 
        	  var patter=/['省'|'市'|'区'|'县']$/;
        	  if(patter.test(address)==true){//关键字结尾是省市县区就调用下面方法
                  getBoundary(this);
                  if(/社区|小区$/.test(address)==true){//因为区后面结尾，会有小区和社区，即做了一个字方法
                      dw(this);
                  }
              }else{//关键字结尾没有省市县区结尾就调用此方法
                  dw(this);
              }
  	         
        	  this.renderMarker();
        	
        },
        setCenter:function(a,e,level){
        	 var i = new BMap.Point(a, e);
        	 var map = this.map;
        	 if(level){
        		 map.centerAndZoom(i,level);
        	 }else{
        		 map.setCenter(i);
        	 }
             
        },
        clearOverlays:function(){
        	var map = this.map;
        	map.clearOverlays();
        },
        addOverlay:function(circle){
        	var map = this.map;
            map.addOverlay(circle);
        },
        addEventListener:function(event,fn){
        	var map = this.map;
        	map.addEventListener(event,fn);
        }
      
        
    },
    window.BaiduMap = t
} (jQuery);